{"version":3,"sources":["components/habit.jsx","components/habbitAddForm.jsx","components/habits.jsx","components/navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","count","className","onClick","Component","HabbitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Navbar","totalCount","App","state","index","indexOf","setState","filter","item","Date","now","handleReset","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a4ef198.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\nclass Habit extends Component {\n\n\n    handleIncrement = () => {\n\n        this.props.onIncrement(this.props.habit);\n    };\n    handleDecrement = () =>{\n\n        this.props.onDecrement(this.props.habit);\n\n    };\n    handleDelete = () => {\n        this.props.onDelete(this.props.habit);\n\n\n    };\n    render() {\n        const {name, count} = this.props.habit;\n        return (\n            <li className=\"habit\">\n            <span className=\"habit-name\">{name}</span>\n            <span className=\"habit-count\">{count}</span>\n            <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\n            <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\n            <i className=\"fas fa-minus-square\"></i>\n            </button>\n            <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n            </button>\n            </li>\n        );\n    }\n}\n\nexport default Habit;","\nimport React, { memo } from 'react';\n//memo -> props 가 변경되지 않으면 안에있는 함수가 호출되지 않음\nconst HabbitAddForm = memo(props => {\n\n    const formRef = React.createRef();\n    const inputRef = React.createRef()\n\n    const onSubmit = event => {\n        event.preventDefault(); //기본설정 제거\n        const name = inputRef.current.value;\n        name && props.onAdd(name);\n        // this.inputRef.current.value = '';\n        formRef.current.reset();\n    };\n\nreturn (\n    <form \n    ref={formRef} \n    className=\"add-form\"\n    onSubmit={onSubmit}>\n        <input \n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"습관을 입력해주세요\"/>\n        <button className=\"add-button\">추가</button>\n    </form>\n);\n});\n\nexport default HabbitAddForm;\n\n\n","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habbitAddForm';\n\nclass Habits extends Component {\n\n    handleIncrement = habit => {\n        this.props.onIncrement(habit);\n        };\n    handleDecrement = habit =>{\n        this.props.onDecrement(habit);\n\n    };\n    handleDelete = habit => {\n        this.props.onDelete(habit);\n\n    };\n    handleAdd = name => {\n        this.props.onAdd(name);\n\n    };\n    render() {\n        return (\n            <>\n            <HabitAddForm onAdd ={this.handleAdd}/>\n            <ul>\n            {this.props.habits.map(habit => (\n                <Habit\n                key={habit.id}\n                //key를 정할 때 배열의 index는 사용하면 안됨\n                habit={habit}\n                onIncrement={this.handleIncrement}\n                onDecrement={this.handleDecrement}\n                onDelete={this.handleDelete}\n                />\n                ))}\n            </ul>\n            <button className=\"habits-reset\" onClick={this.props.onReset}>\n                Reset All\n            </button>\n            </>\n        );\n    }\n}\n\nexport default Habits;","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar\">\n                <i className=\"fas fa-leaf\"></i>\n                <span>Habit Tracker</span>\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\nimport './app.css';\n\n\nclass App extends Component{\n\n      state = {\n        habits :[\n            {id :1, name:'물마시기', count : 0},\n            {id :2, name:'핸드크림 바르기', count : 0},\n            {id :3, name:'하늘보기', count : 0},\n            {id :4, name:'쓰레기 줍기', count : 2},\n        ]\n    };\n\n\n\n    handleIncrement = habit => {\n        //state 오브젝트 안에 있는 count 를 증가한뒤 state를 업데이트해야 함.\n        //setState함수는 꼭 업데이트 해주어야 함 -> render 함수를 다시 호출해줌\n        // this.setState({count : this.state.count + 1})\n        const habits = [...this.state.habits]; // 배열 복사해서 새로운 배열 생성\n        const index = habits.indexOf(habit); //인덱스 생성\n        habits[index].count++;\n        this.setState({ habits : habits });  //({key :  value}) key 와 value가 동일할경우 생략가능 --> ({ habits })\n    };\n    handleDecrement = habit =>{\n        const habits = [...this.state.habits]; // 배열 복사\n        const index = habits.indexOf(habit); //인덱스 생성\n        const count = habits[index].count -1 ;\n        habits[index].count =  count < 0 ? 0 : count;\n        this.setState({ habits })\n\n    };\n    handleDelete = habit => {\n        const habits = this.state.habits.filter(item => item.id !== habit.id);\n        this.setState({ habits });\n        //특정 조건에 부합되는 원소들만 뽑아내서 새 배열을 만들어줌.\n    }\n\n    handleAdd = name => {\n      const habits = [...this.state.habits , {id : Date.now(), name : name, count : 0}];\n      this.setState({ habits });\n\n  }\n\n  handleReset = () => {\n    const habits = this.state.habits.map\n    this.setState({ habits });\n\n}\n\nrender(){\n  return (\n    <>\n    <Navbar totalCount = {this.state.habits.filter(item => item.count > 0 ).length}\n    />\n    <Habits\n    habits={this.state.habits}\n    onIncrement={this.handleIncrement}\n    onDecrement={this.handleDecrement}\n    onDelete={this.handleDelete}\n    onAdd={this.handleAdd}\n    onReset={this.handleReset}\n    />\n    </>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}